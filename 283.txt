// 解答1 暴力
class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        vector<int> nonZeroElements;

        // nonZeroElements尾部加入非0元素
        for(int i = 0; i < nums.size(); i++)
            if(nums[i])
                nonZeroElements.push_back(nums[i]);

        for(int i = 0; i < nonZeroElements.size(); i++)
            nums[i] = nonZeroElements[i];

        // 末尾元素赋0值
        for(int i = nonZeroElements.size(); i < nums.size(); i++)
            nums[i] = 0;
    }
};

// 解答2
class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        int i = 0;
        int j = 0;

        // 遍历数组 非0元素依次排列
        for(i; i < nums.size(); i++){
            if(nums[i])
                nums[j++] = nums[i];
        }
        
        // 末尾元素赋0
        for(j; j < nums.size(); j++)
            nums[j] = 0;
    }
};

// 解答3
class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        int i = 0;
        int j = 0;

        // 遍历数组 非0元素与0元素交换顺序 依次排列
        for(i; i < nums.size(); i++){
            if(nums[i])
            // 防止非0元素自己与自己交换
                if(i != j)
                    swap(nums[j++], nums[i]);
                else
                    j++;
        }
    }
};